graph: {
title: "sub_41CA30"
manhattan_edges: yes
layoutalgorithm: mindepth
finetuning: no
layout_downfactor: 100
layout_upfactor: 0
layout_nearfactor: 0
xlspace: 12
yspace: 30
// IDA palette
colorentry 32: 0 0 0
colorentry 33: 0 0 255
colorentry 34: 0 0 255
colorentry 35: 128 128 128
colorentry 36: 128 128 128
colorentry 37: 0 0 128
colorentry 38: 0 0 128
colorentry 39: 0 0 255
colorentry 40: 0 0 255
colorentry 41: 0 0 128
colorentry 42: 0 128 0
colorentry 43: 0 255 0
colorentry 44: 0 128 0
colorentry 45: 255 128 0
colorentry 46: 0 128 0
colorentry 47: 128 128 255
colorentry 48: 255 0 0
colorentry 49: 128 128 0
colorentry 50: 1 1 1
colorentry 51: 192 192 192
colorentry 52: 0 0 255
colorentry 53: 0 0 255
colorentry 54: 0 0 255
colorentry 55: 128 128 128
colorentry 56: 128 128 255
colorentry 57: 0 128 0
colorentry 58: 0 0 128
colorentry 59: 0 0 255
colorentry 60: 128 0 128
colorentry 61: 0 128 0
colorentry 62: 0 128 0
colorentry 63: 0 128 64
colorentry 64: 0 0 128
colorentry 65: 0 0 128
colorentry 66: 255 0 255
colorentry 67: 128 128 0
colorentry 68: 0 0 128
colorentry 69: 0 0 255
colorentry 70: 0 0 128
colorentry 71: 0 0 255
colorentry 72: 0 0 0
colorentry 73: 255 255 255
colorentry 74: 192 192 192
colorentry 75: 0 255 255
colorentry 76: 0 0 0
colorentry 77: 128 0 0
colorentry 78: 128 128 128
colorentry 79: 128 128 0
colorentry 80: 255 0 255
colorentry 81: 0 0 0
colorentry 82: 0 0 255
colorentry 83: 0 0 0
node: { title: "0" label: "58sub_41CA3031:
sub     esp, 44h
mov     ecx, [edi+0Ch]
push    ebx
mov     ebx, [edi+4]
push    ebp
mov     ebp, [edi+8]
push    esi
mov     esi, eax
mov     eax, [edi]
mov     [esp+50h+var_3C], eax
push    esi
mov     eax, 10h
mov     [esp+54h+var_44], ebx
mov     [esp+54h+var_40], ecx
call    sub_41C9D0
mov     eax, [esp+54h+var_40]
mov     ecx, [esi]
mov     edx, eax
xor     edx, ebp
and     edx, ebx
xor     edx, eax
mov     eax, [esp+54h+var_3C]
add     edx, ecx
mov     ecx, [esi+4]
lea     eax, [edx+eax-28955B88h]
mov     edx, ebp
xor     edx, ebx
add     esp, 4
rol     eax, 7
add     eax, ebx
and     edx, eax
xor     edx, ebp
add     edx, ecx
mov     ecx, [esp+50h+var_40]
lea     ecx, [edx+ecx-173848AAh]
rol     ecx, 0Ch
add     ecx, eax
mov     edx, ebx
xor     edx, eax
and     edx, ecx
xor     edx, ebx
add     edx, [esi+8]
mov     ebx, [esi+0Ch]
lea     edx, [edx+ebp+242070DBh]
ror     edx, 0Fh
add     edx, ecx
mov     ebp, ecx
xor     ebp, eax
and     ebp, edx
xor     ebp, eax
add     ebp, ebx
mov     ebx, [esp+50h+var_44]
lea     ebx, [ebx+ebp-3E423112h]
ror     ebx, 0Ah
add     ebx, edx
mov     ebp, ecx
xor     ebp, edx
and     ebp, ebx
xor     ebp, ecx
add     ebp, [esi+10h]
mov     [esp+50h+var_44], ebx
lea     eax, [eax+ebp-0A83F051h]
rol     eax, 7
add     eax, ebx
mov     ebp, edx
xor     ebp, ebx
and     ebp, eax
xor     ebp, edx
add     ebp, [esi+14h]
lea     ecx, [ecx+ebp+4787C62Ah]
rol     ecx, 0Ch
mov     ebp, ebx
xor     ebp, eax
add     ecx, eax
and     ebp, ecx
xor     ebp, ebx
add     ebp, [esi+18h]
mov     ebx, [esi+1Ch]
lea     edx, [edx+ebp-57CFB9EDh]
ror     edx, 0Fh
add     edx, ecx
mov     [esp+50h+var_34], ebx
mov     ebp, ecx
xor     ebp, eax
and     ebp, edx
xor     ebp, eax
add     ebp, ebx
mov     ebx, [esp+50h+var_44]
lea     ebx, [ebx+ebp-2B96AFFh]
ror     ebx, 0Ah
add     ebx, edx
mov     ebp, ecx
xor     ebp, edx
and     ebp, ebx
xor     ebp, ecx
add     ebp, [esi+20h]
mov     [esp+50h+var_44], ebx
lea     eax, [eax+ebp+698098D8h]
rol     eax, 7
add     eax, ebx
mov     ebp, edx
xor     ebp, ebx
and     ebp, eax
xor     ebp, edx
add     ebp, [esi+24h]
lea     ecx, [ecx+ebp-74BB0851h]
mov     ebp, ebx
xor     ebp, eax
rol     ecx, 0Ch
add     ecx, eax
and     ebp, ecx
xor     ebp, ebx
add     ebp, [esi+28h]
mov     ebx, [esi+2Ch]
lea     edx, [edx+ebp-0A44Fh]
ror     edx, 0Fh
add     edx, ecx
mov     ebp, ecx
xor     ebp, eax
and     ebp, edx
xor     ebp, eax
add     ebp, ebx
mov     ebx, [esp+50h+var_44]
lea     ebx, [ebx+ebp-76A32842h]
ror     ebx, 0Ah
add     ebx, edx
mov     ebp, ecx
xor     ebp, edx
and     ebp, ebx
xor     ebp, ecx
add     ebp, [esi+30h]
mov     [esp+50h+var_44], ebx
lea     eax, [eax+ebp+6B901122h]
rol     eax, 7
add     eax, ebx
mov     ebp, edx
xor     ebp, ebx
and     ebp, eax
xor     ebp, edx
add     ebp, [esi+34h]
lea     ecx, [ecx+ebp-2678E6Dh]
mov     ebp, ebx
xor     ebp, eax
rol     ecx, 0Ch
add     ecx, eax
and     ebp, ecx
xor     ebp, ebx
add     ebp, [esi+38h]
mov     ebx, [esi+3Ch]
lea     edx, [edx+ebp-5986BC72h]
ror     edx, 0Fh
add     edx, ecx
mov     ebp, ecx
xor     ebp, eax
and     ebp, edx
xor     ebp, eax
add     ebp, ebx
mov     ebx, [esp+50h+var_44]
lea     ebx, [ebx+ebp+49B40821h]
ror     ebx, 0Ah
mov     [esp+50h+var_40], ecx
add     ebx, edx
mov     ebp, edx
xor     ebp, ebx
and     ebp, ecx
xor     ebp, edx
add     ebp, [esi+4]
mov     ecx, ebx
lea     eax, [eax+ebp-9E1DA9Eh]
mov     ebp, [esp+50h+var_40]
rol     eax, 5
add     eax, ebx
xor     ecx, eax
and     ecx, edx
xor     ecx, ebx
add     ecx, [esi+18h]
lea     ecx, [ecx+ebp-3FBF4CC0h]
rol     ecx, 9
add     ecx, eax
mov     [esp+50h+var_40], ecx
xor     ecx, eax
and     ecx, ebx
xor     ecx, eax
add     ecx, [esi+2Ch]
lea     edx, [ecx+edx+265E5A51h]
mov     ecx, [esp+50h+var_40]
rol     edx, 0Eh
add     edx, ecx
mov     ebp, ecx
xor     ebp, edx
and     ebp, eax
xor     ebp, ecx
add     ebp, [esi]
mov     ecx, edx
lea     ebx, [ebx+ebp-16493856h]
ror     ebx, 0Ch
add     ebx, edx
xor     ecx, ebx
and     ecx, [esp+50h+var_40]
mov     ebp, [esp+50h+var_40]
xor     ecx, edx
add     ecx, [esi+14h]
lea     eax, [ecx+eax-29D0EFA3h]
rol     eax, 5
add     eax, ebx
mov     ecx, ebx
xor     ecx, eax
and     ecx, edx
xor     ecx, ebx
add     ecx, [esi+28h]
lea     ecx, [ecx+ebp+2441453h]
rol     ecx, 9
add     ecx, eax
mov     ebp, ecx
xor     ebp, eax
and     ebp, ebx
xor     ebp, eax
add     ebp, [esi+3Ch]
lea     edx, [edx+ebp-275E197Fh]
rol     edx, 0Eh
add     edx, ecx
mov     ebp, ecx
xor     ebp, edx
and     ebp, eax
xor     ebp, ecx
add     ebp, [esi+10h]
mov     [esp+50h+var_44], edx
lea     ebx, [ebx+ebp-182C0438h]
mov     ebp, edx
ror     ebx, 0Ch
add     ebx, edx
xor     ebp, ebx
and     ebp, ecx
xor     ebp, edx
add     ebp, [esi+24h]
mov     edx, ebx
lea     eax, [eax+ebp+21E1CDE6h]
rol     eax, 5
add     eax, ebx
xor     edx, eax
and     edx, [esp+50h+var_44]
xor     edx, ebx
add     edx, [esi+38h]
lea     ecx, [edx+ecx-3CC8F82Ah]
mov     ebp, [esp+50h+var_44]
rol     ecx, 9
add     ecx, eax
mov     edx, ecx
xor     edx, eax
and     edx, ebx
xor     edx, eax
add     edx, [esi+0Ch]
lea     edx, [edx+ebp-0B2AF279h]
rol     edx, 0Eh
add     edx, ecx
mov     ebp, ecx
xor     ebp, edx
and     ebp, eax
xor     ebp, ecx
add     ebp, [esi+20h]
mov     [esp+50h+var_44], edx
lea     ebx, [ebx+ebp+455A14EDh]
ror     ebx, 0Ch
add     ebx, edx
mov     ebp, edx
xor     ebp, ebx
and     ebp, ecx
xor     ebp, edx
add     ebp, [esi+34h]
lea     eax, [eax+ebp-561C16FBh]
rol     eax, 5
add     eax, ebx
mov     ebp, ebx
xor     ebp, eax
and     ebp, edx
mov     edx, [esi+8]
xor     ebp, ebx
add     ebp, edx
lea     ecx, [ecx+ebp-3105C08h]
rol     ecx, 9
add     ecx, eax
mov     [esp+50h+var_3C], edx
mov     edx, [esi+1Ch]
mov     ebp, ecx
xor     ebp, eax
and     ebp, ebx
xor     ebp, eax
add     ebp, edx
mov     edx, [esp+50h+var_44]
lea     ebp, [edx+ebp+676F02D9h]
rol     ebp, 0Eh
add     ebp, ecx
mov     [esp+50h+var_44], ebp
mov     edx, ecx
xor     edx, ebp
mov     ebp, edx
and     ebp, eax
xor     ebp, ecx
add     ebp, [esi+30h]
lea     ebx, [ebx+ebp-72D5B376h]
mov     ebp, [esi+14h]
ror     ebx, 0Ch
add     ebx, [esp+50h+var_44]
mov     [esp+50h+var_2C], ebp
xor     edx, ebx
add     edx, ebp
mov     ebp, [esp+50h+var_44]
lea     eax, [edx+eax-5C6BEh]
mov     edx, [esi+20h]
xor     ebp, ebx
rol     eax, 4
add     eax, ebx
xor     ebp, eax
add     ebp, edx
lea     ecx, [ecx+ebp-788E097Fh]
rol     ecx, 0Bh
add     ecx, eax
mov     ebp, ecx
xor     ebp, ebx
mov     [esp+50h+var_1C], edx
mov     edx, [esi+2Ch]
xor     ebp, eax
mov     [esp+50h+var_8], edx
add     ebp, edx
mov     edx, [esp+50h+var_44]
lea     edx, [edx+ebp+6D9D6122h]
rol     edx, 10h
add     edx, ecx
mov     ebp, ecx
xor     ebp, edx
mov     [esp+50h+var_40], ebp
xor     ebp, eax
mov     [esp+50h+var_44], edx
mov     edx, [esi+38h]
add     ebp, edx
lea     ebx, [ebx+ebp-21AC7F4h]
mov     ebp, [esi+4]
ror     ebx, 9
add     ebx, [esp+50h+var_44]
mov     [esp+50h+var_20], ebp
mov     [esp+50h+var_30], edx
mov     edx, [esp+50h+var_40]
xor     edx, ebx
add     edx, ebp
mov     ebp, [esp+50h+var_44]
xor     ebp, ebx
lea     eax, [edx+eax-5B4115BCh]
mov     edx, [esi+10h]
rol     eax, 4
add     eax, ebx
xor     ebp, eax
add     ebp, edx
mov     [esp+50h+var_C], edx
lea     edx, [ecx+ebp+4BDECFA9h]
mov     ebp, [esp+50h+var_44]
rol     edx, 0Bh
add     edx, eax
mov     ecx, edx
xor     ecx, ebx
xor     ecx, eax
add     ecx, [esi+1Ch]
lea     ecx, [ecx+ebp-944B4A0h]
rol     ecx, 10h
add     ecx, edx
mov     ebp, edx
xor     ebp, ecx
mov     [esp+50h+var_40], ebp
xor     ebp, eax
mov     [esp+50h+var_44], ecx
mov     ecx, [esi+28h]
add     ebp, ecx
mov     [esp+50h+var_24], ecx
lea     ecx, [ebx+ebp-41404390h]
mov     ebx, [esp+50h+var_40]
mov     ebp, [esi+34h]
ror     ecx, 9
add     ecx, [esp+50h+var_44]
mov     [esp+50h+var_10], ebp
xor     ebx, ecx
add     ebx, ebp
mov     ebp, [esp+50h+var_44]
lea     eax, [ebx+eax+289B7EC6h]
mov     ebx, [esi]
xor     ebp, ecx
rol     eax, 4
add     eax, ecx
xor     ebp, eax
add     ebp, ebx
lea     edx, [edx+ebp-155ED806h]
rol     edx, 0Bh
add     edx, eax
mov     [esp+50h+var_38], ebx
mov     ebx, [esi+0Ch]
mov     ebp, edx
xor     ebp, ecx
xor     ebp, eax
add     ebp, ebx
mov     [esp+50h+var_28], ebx
mov     ebx, [esp+50h+var_44]
lea     ebx, [ebx+ebp-2B10CF7Bh]
rol     ebx, 10h
add     ebx, edx
mov     ebp, edx
xor     ebp, ebx
mov     [esp+50h+var_44], ebx
mov     [esp+50h+var_40], ebp
mov     ebx, [esi+18h]
xor     ebp, eax
add     ebp, ebx
lea     ecx, [ecx+ebp+4881D05h]
mov     ebp, [esi+24h]
ror     ecx, 9
add     ecx, [esp+50h+var_44]
mov     [esp+50h+var_14], ebx
mov     ebx, [esp+50h+var_40]
xor     ebx, ecx
add     ebx, ebp
lea     eax, [ebx+eax-262B2FC7h]
mov     ebx, [esi+30h]
mov     esi, [esi+3Ch]
rol     eax, 4
add     eax, ecx
mov     [esp+50h+var_18], esi
mov     [esp+50h+var_4], ebp
mov     ebp, [esp+50h+var_44]
xor     ebp, ecx
xor     ebp, eax
add     ebp, ebx
mov     [esp+50h+var_40], ebx
lea     edx, [edx+ebp-1924661Bh]
mov     ebp, [esp+50h+var_3C]
rol     edx, 0Bh
add     edx, eax
mov     ebx, edx
xor     ebx, ecx
xor     ebx, eax
add     ebx, esi
mov     esi, [esp+50h+var_44]
lea     ebx, [ebx+esi+1FA27CF8h]
rol     ebx, 10h
add     ebx, edx
mov     esi, edx
xor     esi, ebx
xor     esi, eax
add     esi, ebp
lea     ecx, [esi+ecx-3B53A99Bh]
ror     ecx, 9
add     ecx, ebx
mov     esi, edx
not     esi
or      esi, ecx
xor     esi, ebx
add     esi, [esp+50h+var_38]
lea     eax, [esi+eax-0BD6DDBCh]
rol     eax, 6
add     eax, ecx
mov     esi, ebx
not     esi
or      esi, eax
xor     esi, ecx
add     esi, [esp+50h+var_34]
lea     edx, [esi+edx+432AFF97h]
rol     edx, 0Ah
add     edx, eax
mov     esi, ecx
not     esi
or      esi, edx
xor     esi, eax
add     esi, [esp+50h+var_30]
lea     ebx, [esi+ebx-546BDC59h]
rol     ebx, 0Fh
add     ebx, edx
mov     esi, eax
not     esi
or      esi, ebx
xor     esi, edx
add     esi, [esp+50h+var_2C]
lea     ecx, [esi+ecx-36C5FC7h]
ror     ecx, 0Bh
mov     esi, edx
not     esi
add     ecx, ebx
or      esi, ecx
xor     esi, ebx
add     esi, [esp+50h+var_40]
lea     eax, [esi+eax+655B59C3h]
rol     eax, 6
mov     esi, ebx
add     eax, ecx
not     esi
or      esi, eax
xor     esi, ecx
add     esi, [esp+50h+var_28]
lea     edx, [esi+edx-70F3336Eh]
rol     edx, 0Ah
add     edx, eax
mov     esi, ecx
not     esi
or      esi, edx
xor     esi, eax
add     esi, [esp+50h+var_24]
lea     esi, [esi+ebx-100B83h]
rol     esi, 0Fh
add     esi, edx
mov     ebx, eax
not     ebx
or      ebx, esi
xor     ebx, edx
add     ebx, [esp+50h+var_20]
lea     ecx, [ebx+ecx-7A7BA22Fh]
ror     ecx, 0Bh
add     ecx, esi
mov     ebx, edx
not     ebx
or      ebx, ecx
xor     ebx, esi
add     ebx, [esp+50h+var_1C]
lea     eax, [ebx+eax+6FA87E4Fh]
rol     eax, 6
add     eax, ecx
mov     ebx, esi
not     ebx
or      ebx, eax
xor     ebx, ecx
add     ebx, [esp+50h+var_18]
lea     edx, [ebx+edx-1D31920h]
rol     edx, 0Ah
add     edx, eax
mov     ebx, ecx
not     ebx
or      ebx, edx
xor     ebx, eax
add     ebx, [esp+50h+var_14]
lea     esi, [ebx+esi-5CFEBCECh]
rol     esi, 0Fh
add     esi, edx
mov     ebx, eax
not     ebx
or      ebx, esi
xor     ebx, edx
add     ebx, [esp+50h+var_10]
lea     ecx, [ebx+ecx+4E0811A1h]
ror     ecx, 0Bh
add     ecx, esi
mov     ebx, edx
not     ebx
or      ebx, ecx
xor     ebx, esi
add     ebx, [esp+50h+var_C]
lea     eax, [ebx+eax-8AC817Eh]
rol     eax, 6
add     eax, ecx
mov     ebx, esi
not     ebx
or      ebx, eax
xor     ebx, ecx
add     ebx, [esp+50h+var_8]
lea     edx, [ebx+edx-42C50DCBh]
rol     edx, 0Ah
add     edx, eax
mov     ebx, ecx
not     ebx
or      ebx, edx
xor     ebx, eax
add     ebx, ebp
lea     esi, [ebx+esi+2AD7D2BBh]
rol     esi, 0Fh
add     esi, edx
add     [edi+8], esi
add     [edi], eax
mov     ebx, eax
not     ebx
or      ebx, esi
xor     ebx, edx
add     ebx, [esp+50h+var_4]
lea     ecx, [ebx+ecx-14792C6Fh]
ror     ecx, 0Bh
add     ecx, esi
add     [edi+4], ecx
add     [edi+0Ch], edx
pop     esi
pop     ebp
pop     ebx
add     esp, 44h
retn" vertical_order: 0 }
// node 0
}
